require 'io/netcdf/base'
module FGenMod
  module IO
    module NetCDF

      class Header < FGenMod::IO::NetCDF::Base

        def generate
          name="#{config.namespace}#{config.struct_name}"

          # Base nspaces indent
          nspaces=12
          
          # The header
          str=strip_output(<<-EOT,"")
          !
          ! #{name}_#{io_type}_IO
          !
          ! Module containing routines to read and write #{io_type} format
          ! #{name} data files.
          !
          ! CREATION HISTORY:
          !       This file was automatically generated so edit at your own risk.
          !       Generated by #{File.basename(__FILE__)} on #{Time.now.strftime('%d-%b-%Y')}
          !       Contact info:  Paul van Delst, CIMSS/SSEC
          !                      paul.vandelst@ssec.wisc.edu
          !

          MODULE #{name}_#{io_type}_IO

            ! ------------------
            ! Environment set up
            ! ------------------
            ! Module use
            #{dependencies(Generator::DEPENDENCIES,:nspaces=>nspaces)}
            USE #{name}_Define
            ! Disable implicit typing
            IMPLICIT NONE


            ! ------------
            ! Visibilities
            ! ------------
            ! Everything private by default
            PRIVATE
            ! Structure procedures
            #{public_procedures(Generator::PUBLIC_GENERATORS,:nspaces=>nspaces)}
              

            ! -----------------
            ! Module parameters
            ! -----------------
            ! RCS Id for the module
            CHARACTER(*), PARAMETER :: MODULE_RCS_ID = &
            '$Id: $'
            ! Keyword set value
            INTEGER, PARAMETER :: SET = 1

          EOT
          str.rstrip<<"\n\n"
        end
      end
    end
  end
end
