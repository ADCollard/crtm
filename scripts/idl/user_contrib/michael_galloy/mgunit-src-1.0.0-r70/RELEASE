-------------
Release notes
-------------

mgunit 1.0
----------

* Framework for creating pass/fail unit tests with as little overhead and
  boilerplate text as possible. Simply create a new class which inherits from
  MGutTestCase, no init or cleanup methods are necessary unless the test
  requires some setup before it is run. Any function method whose name begins
  with "test" will be executed: it is considered a pass if it returns 1,
  failing if it returns 0 or crashes.

* Suites can automatically gather together many test case classes together if
  the tests follow a simple naming convention: end the test case classname in
  "_ut". In this way, mgunit can run individual test cases or test suites
  aggregating test cases at various levels.

* Several test runners for outputting test results to various formats are
  available; output can be sent to stdout, log files, or html files. In
  addition, there is a GUI test runner that will show results and re-run tests
  with the push of a button (also recompiling tests before running them).

* If there is common setup required for each test method in a test case, a
  setup method can be written. This method will be called before each test
  method (the teardown method will be called after each test method).

* Contains IDL Workbench templates for making it even faster to create new
  test cases/suites.
  
* Keywords to mgunit to retrieve the number of passing and failing tests.

* Color output to the terminal window when possible.

* Shell script to run mgunit from the UNIX command line.