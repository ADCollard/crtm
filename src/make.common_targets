#------------------------------------------------------------------------------
#
# NAME:
#       make.common_targets
#
# PURPOSE:
#       Unix make utility include file for common targets used for builds.
#       Note that this include file is intended for use with the make.macros
#       and make.rules include files also.
#
# LANGUAGE:
#       Unix make
#
# CALLING SEQUENCE:
#       include make.common_targets
#
# CREATION HISTORY:
#       Written by:     Paul van Delst, CIMSS/SSEC 30-Jun-2006
#                       paul.vandelst@ssec.wisc.edu
#
#------------------------------------------------------------------------------

# ------------------------------
# Default build based on OS type
# ------------------------------
all:
	@echo "OS type detected: "`uname -s`
	@case `uname -s` in \
	  "SunOS")          make -f $(MAKE_FILE) build $(SUNOS_FLAGS) ;; \
	  "AIX")            make -f $(MAKE_FILE) build $(AIX_FLAGS) ;; \
	  "IRIX64")         make -f $(MAKE_FILE) build $(IRIX64_FLAGS) ;; \
	  "Linux"|"Darwin") make -f $(MAKE_FILE) build $(LINUX_FLAGS) ;; \
	  *) echo "This system is not supported" ;; \
       esac


# ----------------------
# Specific build targets
# ----------------------
# IBM AIX Compiler
ibm_debug:
	make -f $(MAKE_FILE) build $(AIX_FLAGS_DEBUG)

ibm:
	make -f $(MAKE_FILE) build $(AIX_FLAGS_PROD)


# SGI MIPSpro Compiler
sgi_debug:
	make -f $(MAKE_FILE) build $(IRIX64_FLAGS_DEBUG)

sgi:
	make -f $(MAKE_FILE) build $(IRIX64_FLAGS_PROD)


# SunOS Compiler
sun_debug:
	make -f $(MAKE_FILE) build $(SUNOS_FLAGS_DEBUG)

sun:
	make -f $(MAKE_FILE) build $(SUNOS_FLAGS_PROD)


# Linux compilers.
intel_debug:
	make -f $(MAKE_FILE) build $(LINUX_FLAGS_INTEL_DEBUG)

intel:
	make -f $(MAKE_FILE) build $(LINUX_FLAGS_INTEL_PROD)

lahey_debug:
	make -f $(MAKE_FILE) build $(LINUX_FLAGS_LAHEY_DEBUG)

lahey:
	make -f $(MAKE_FILE) build $(LINUX_FLAGS_LAHEY_PROD)

pgi_debug:
	make -f $(MAKE_FILE) build $(LINUX_FLAGS_PGI_DEBUG)

pgi:
	make -f $(MAKE_FILE) build $(LINUX_FLAGS_PGI_PROD)

g95_debug:
	make -f $(MAKE_FILE) build $(LINUX_FLAGS_G95_DEBUG)

g95:
	make -f $(MAKE_FILE) build $(LINUX_FLAGS_G95_PROD)


# -----------------
# Build the program
# -----------------
build: $(OBJ_FILES)
	$(FL) $(OBJ_FILES) $(FL_FLAGS) $(EXE_FILE)


# --------
# Clean up
# --------
clean:
	$(REMOVE) $(OBJ_FILES) *.mod *.MOD


# ----------------------
# Install the executable
# ----------------------
install:
	@if [ -d $(HOME)/bin ]; then \
	  $(MOVE) $(EXE_FILE) $(HOME)/bin; \
	fi

