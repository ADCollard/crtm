$Id$

To build this little example program that calls the CRTM Forward model:

1) You need to build the CRTM library.


2) You may need to modify the following macros in the Makefile in this directory:

   CRTM_DIR
     This tells the compiler where the CRTM library is. Currently it is set
     to $(CRTM_SOURCE_ROOT)/Build.
   
   FC
     This defines the Fortran95 compiler to use. Change this to use your system
     compiler.
     (Currently it is set to gfortran. To download gfortran either visit
        http://gcc.gnu.org/wiki/GFortran
      or your friendly local sysadmin.)

   
   FC_FLAGS
     These are the compiler flags. Change this to use your preferred flags.
     (Currently they are set to what is used for CRTM development using the
      gfortran compiler.)
      
   Note that there are a number of predefined macros one can use to define the
   FC and FC_FLAGS macros. See the bottom of the makefile. Available macros are
     FC_GFORTRAN, FC_GFORTRAN_FLAGS  (default)
     FC_G95,      FC_G95_FLAGS
     FC_INTEL,    FC_INTEL_FLAGS
     FC_PGI,      FC_PGI_FLAGS
     FC_LAHEY,    FC_LAHEY_FLAGS
     FC_XLF,      FC_XLF_FLAGS
     

3) Type
     make
   to build the example prgram and link in the CRTM library.
   
   
4) Either type
     Example_Forward
   to run the example program sensor-by-sensor, or
     run_Example_Forward.sh
   to run a script that runs the executable for all the sensors. Coefficient data
   for a number of sensors are provided. The sensor id for these are:
     amsua_metop-a
     mhs_n18
     hirs4_n18
     ssu_n14
     ssmis_f16
     v.seviri_m09
     hirs3_n17
     amsre_aqua


5) Output from the example program for the three test sensors is in the /Results
   subdirectory. Compare that output to yours. Note that if you run the 
     run_Example_Forward.sh
   script, the results will be differenced automatically and placed in a file.
   

If you have any problems, contact the JCSDA CRTM list at:
  ncep.list.emc.jcsda_crtm@noaa.gov


