#==============================================================================
#
# Makefile for sensor Planck radiance test programs
#
#==============================================================================

#-----------------------------------------------------------------------------
#                          -- Define macros --
#-----------------------------------------------------------------------------

include make.macros


# --------------
# This make file
# --------------

MAKE_FILE = makefile


# ---------------
# Executable file
# ---------------

EXE_FILE = Sensor_Planck_Functions_Test


# ------------
# Object files
# ------------

UTILITY_OBJ_FILES = Type_Kinds.o \
                    File_Utility.o \
                    Error_Handler.o \
                    Compare_Float_Numbers.o
CONSTANTS_OBJ_FILES = Fundamental_Constants.o
NETCDF_OBJ_FILES = netCDF_Utility.o \
                   netCDF_Dimension_Utility.o \
                   netCDF_Variable_Utility.o \
                   netCDF_Attribute_Utility.o
SPCCOEFF_OBJ_FILES = SpcCoeff_Define.o \
                     SpcCoeff_netCDF_IO.o
PLANCK_OBJ_FILES = Planck_Functions.o \
                   Sensor_Planck_Functions.o

OBJ_FILES = $(UTILITY_OBJ_FILES) \
            $(CONSTANTS_OBJ_FILES) \
            $(NETCDF_OBJ_FILES) \
            $(SPCCOEFF_OBJ_FILES) \
            $(PLANCK_OBJ_FILES) \
            $(EXE_FILE).o



# -------------------------------
# Include and library definitions
# -------------------------------

INCLUDES = -I$(HOME)/local/netcdf/include
LIBRARIES = -L$(HOME)/local/netcdf/lib -lnetcdf



#-----------------------------------------------------------------------------
#                          -- Define dependecies --
#-----------------------------------------------------------------------------

# ---------------------
# Make based on OS type
# ---------------------

all:
	@echo "OS type detected: "`uname -s`
	@case `uname -s` in \
	  "SunOS")    make -f $(MAKE_FILE) the_program $(SUNOS_FLAGS) ;; \
	   "AIX")     make -f $(MAKE_FILE) the_program $(AIX_FLAGS) ;; \
	   "IRIX64" ) make -f $(MAKE_FILE) the_program $(IRIX64_FLAGS) ;; \
	   "Linux" )  make -f $(MAKE_FILE) the_program $(Linux_FLAGS) ;; \
	   *) echo "This system is not supported" ;; \
       esac


# ----------------------
# Make the test programs
# ----------------------

the_program: $(OBJ_FILES)
	$(FL) $(OBJ_FILES) $(FL_FLAGS) $(EXE_FILE)


# --------
# Clean up
# --------

clean:
	$(REMOVE) $(OBJ_FILES) *.mod *.MOD *.stb


# ---------------
# Dedendency list
# ---------------

Type_Kinds.o : Type_Kinds.f90 
File_Utility.o : File_Utility.f90 
Error_Handler.o : Error_Handler.f90 File_Utility.o 
Compare_Float_Numbers.o : Compare_Float_Numbers.f90 Type_Kinds.o 

Fundamental_Constants.o : Fundamental_Constants.f90 Type_Kinds.o 

netCDF_Dimension_Utility.o : netCDF_Dimension_Utility.f90 Error_Handler.o Type_Kinds.o 
netCDF_Variable_Utility.o : netCDF_Variable_Utility.f90 Error_Handler.o Type_Kinds.o 
netCDF_Attribute_Utility.o : netCDF_Attribute_Utility.f90 Error_Handler.o Type_Kinds.o 
netCDF_Utility.o : netCDF_Utility.f90 netCDF_Attribute_Utility.o netCDF_Variable_Utility.o netCDF_Dimension_Utility.o Error_Handler.o Type_Kinds.o 

SpcCoeff_Define.o : SpcCoeff_Define.f90 Type_Kinds.o Error_Handler.o Compare_Float_Numbers.o
SpcCoeff_netCDF_IO.o : SpcCoeff_netCDF_IO.f90 Type_Kinds.o Error_Handler.o SpcCoeff_Define.o netCDF_Utility.o 

Planck_Functions.o : Planck_Functions.f90 Type_Kinds.o Fundamental_Constants.o Error_Handler.o 
Sensor_Planck_Functions.o : Sensor_Planck_Functions.f90 Type_Kinds.o Error_Handler.o SpcCoeff_Define.o Planck_Functions.o

$(EXE_FILE).o : $(EXE_FILE).f90 Type_Kinds.o Error_Handler.o SpcCoeff_Define.o SpcCoeff_netCDF_IO.o Sensor_Planck_Functions.o 


# -------------------------------
# Create tarball for distribution
# -------------------------------

TEST_INPUT_FILE = hirs3_n17.SpcCoeff.nc
TEST_OUTPUT_FILE = Sensor_Planck_Functions_Test.output
TAR_FILE = $(EXE_FILE)_software.tar

tar:
	$(TARBALL_CREATE) $(TAR_FILE) ${OBJ_FILES:.o=.f90}
	$(TARBALL_APPEND) $(TAR_FILE) makefile
	$(TARBALL_APPEND) $(TAR_FILE) make.macros make.rules
	$(TARBALL_APPEND) $(TAR_FILE) $(TEST_INPUT_FILE)
	$(TARBALL_APPEND) $(TAR_FILE) $(TEST_OUTPUT_FILE)
	compress $(TAR_FILE)



#-----------------------------------------------------------------------------
#                          -- Define default rules --
#-----------------------------------------------------------------------------

include make.rules


