#------------------------------------------------------------------------------
#
# NAME:
#       make.macros
#
# PURPOSE:
#       Unix make utility include file for definition of various make flags
#
# LANGUAGE:
#       Unix make
#
# CALLING SEQUENCE:
#       include make.macros
#
# CREATION HISTORY:
#       Written by:     Paul van Delst, CIMSS/SSEC 08-Jun-2000
#                       paul.vandelst@ssec.wisc.edu
#
#  Copyright (C) 2000 Paul van Delst
#
#  This program is free software; you can redistribute it and/or
#  modify it under the terms of the GNU General Public License
#  as published by the Free Software Foundation; either version 2
#  of the License, or (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the Free Software
#  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
#
#------------------------------------------------------------------------------

#################################################################################
#                                                                               #
#                        GENERAL USE MACRO SPECIFICATION                        #
#                                                                               #
#################################################################################

# -------------
# Default shell
# -------------

SHELL = /bin/sh


# ---------------------
# Directory definitions
# ---------------------

# -- LBLRTM source code directory
LBLRTM_DIR = lblrtm

# -- LNFL source code directory
LNFL_DIR = lnfl

# -- Shared source code
# -- Contains the util_XXX.f files
SHARED_DIR = shared


# -------------------
# Command definitions
# -------------------

# -- Define link, copy and delete commands
LINK = ln -sf
COPY = cp -v 
REMOVE = rm -f

# -- Define tarballer commands
TARBALLER = tar
TARBALL_CREATE = $(TARBALLER) cvhf
TARBALL_APPEND = $(TARBALLER) rvhf

# -- Define archiver and flags
ARCHIVER = ar
ARCHIVER_FLAGS = crvs
ARCHIVE_NAME =

# -- Include and library definitions
INCLUDES = 
LIBRARIES =  



#################################################################################
#                                                                               #
#                      SPECIFIC PLATFORM FLAG SPECIFICATION                     #
#                                                                               #
#################################################################################

#--------------------------------------------------------------------------------#
#                             -- SUN FORTRAN COMPILER --                         #
#--------------------------------------------------------------------------------#

# -- Precision promotion flags. Note the use of "-xtypemap" rather than the
# -- "-dbl". On Sun SPARC systems, "-dbl" also promotes default double precision
# -- data to quad precision (128 bits). On Sun x86 systems, "-dbl" produces the
# -- same result as the "-xtypemap" option below, i.e. it does *not* promote
# -- default double precision data to quad. How nice of Sun to make makefile
# -- portability so clear and simple.... :o(

# -- Compile and link common flags
SUNOS_FC_AND_FL_COMMON_FLAGS = -O3

# -- Single and double precision compile common flags
SUNOS_FC_COMMON_FLAGS = -c

# -- Single precision compile flags
SUNOS_FC_SGL_FLAGS = ${SUNOS_FC_COMMON_FLAGS} \
                     ${SUNOS_FC_AND_FL_COMMON_FLAGS}

# -- Double precision compile flags
SUNOS_FC_DBL_FLAGS = ${SUNOS_FC_COMMON_FLAGS} \
                     -xtypemap=real:64,double:64,integer:64 \
                     ${SUNOS_FC_AND_FL_COMMON_FLAGS}

# -- Linker flags
SUNOS_FL_FLAGS = ${SUNOS_FC_AND_FL_COMMON_FLAGS} \
                 -o

# -- Compier and linker definitions
SUNOS_COMPILER = f90
SUNOS_LINKER = f90

# -- Utility file definition
SUNOS_UTIL_OBJ_FILE=util_sun.o

# -- Endian definition
SUNOS_ENDIAN=big_endian



# ---------------------
# Main flag definitions
# ---------------------

# -- Single precision
SUNOS_SGL_FLAGS = "FC=${SUNOS_COMPILER}" \
	          "FL=${SUNOS_LINKER}" \
	          "FC_FLAGS=${SUNOS_FC_SGL_FLAGS}" \
	          "FL_FLAGS=${SUNOS_FL_FLAGS}" \
                  "UTIL_OBJ_FILE=${SUNOS_UTIL_OBJ_FILE}" \
		  "TAG=sgl" \
                  "ENDIAN=${SUNOS_ENDIAN}"

# -- Single precision
SUNOS_DBL_FLAGS = "FC=${SUNOS_COMPILER}" \
	          "FL=${SUNOS_LINKER}" \
	          "FC_FLAGS=${SUNOS_FC_DBL_FLAGS}" \
	          "FL_FLAGS=${SUNOS_FL_FLAGS}" \
                  "UTIL_OBJ_FILE=${SUNOS_UTIL_OBJ_FILE}"\
		  "TAG=dbl" \
                  "ENDIAN=${SUNOS_ENDIAN}"



#--------------------------------------------------------------------------------#
#                             -- IBM AIX XLF COMPILER --                         #
#--------------------------------------------------------------------------------#

# -- Precision promotion flags. All descriptions from the xlf manpage.
# --
# -- The "-qfloat=rndsngl" is for the single precision option and,
# --   "Ensures strict adherence to IEEE standard.  That is, all operations
# --    on single-precision values produce results that remain in single
# --    precision."
# --
# -- The "-qrealsize=<bytes>" option does, from the xlf manpage:
# --   "Sets the size of the default REAL, DOUBLE PRECISION,
# --    COMPLEX and DOUBLE COMPLEX values.  The allowed values
# --    for <bytes> are 4 and 8.
# -- The "-qintsize=<bytes>" option does, from the xlf manpage:
# --   "Sets the size of default INTEGER and LOGICAL values."
# --
# -- Hopefully this does what is required.

# -- Compile and link common flags
AIX_FC_AND_FL_COMMON_FLAGS = -O2

# -- Single and double precision compile common flags
AIX_FC_COMMON_FLAGS = -c \
                      -qarch=auto \
                      -qfixed=72 \
                      -qmaxmem=-1 \
                      -bmaxdata=0x80000000 \
                      -bmaxstack=0x10000000

# -- Single precision compile flags
AIX_FC_SGL_FLAGS = ${AIX_FC_COMMON_FLAGS} \
                   -qfloat=rndsngl \
                   ${AIX_FC_AND_FL_COMMON_FLAGS}

# -- Double precision compile flags
AIX_FC_DBL_FLAGS = ${AIX_FC_COMMON_FLAGS} \
                   -qrealsize=8 -qintsize=8 \
                   ${AIX_FC_AND_FL_COMMON_FLAGS}

# -- Linker flags
AIX_FL_FLAGS = ${AIX_FC_AND_FL_COMMON_FLAGS} \
               -o

# -- Compier and linker definitions
AIX_COMPILER = xlf95
AIX_LINKER = xlf95

# -- Utility file definition
AIX_UTIL_OBJ_FILE=util_aix.o

# -- Endian definition
AIX_ENDIAN=big_endian



# ---------------------
# Main flag definitions
# ---------------------

# -- Single precision
AIX_SGL_FLAGS = "FC=${AIX_COMPILER}" \
	        "FL=${AIX_LINKER}" \
	        "FC_FLAGS=${AIX_FC_SGL_FLAGS}" \
	        "FL_FLAGS=${AIX_FL_FLAGS}" \
                "UTIL_OBJ_FILE=${AIX_UTIL_OBJ_FILE}" \
		"TAG=sgl" \
                "ENDIAN=${AIX_ENDIAN}"

# -- Single precision
AIX_DBL_FLAGS = "FC=${AIX_COMPILER}" \
	        "FL=${AIX_LINKER}" \
	        "FC_FLAGS=${AIX_FC_DBL_FLAGS}" \
	        "FL_FLAGS=${AIX_FL_FLAGS}" \
                "UTIL_OBJ_FILE=${AIX_UTIL_OBJ_FILE}"\
		"TAG=dbl" \
                "ENDIAN=${AIX_ENDIAN}"



#--------------------------------------------------------------------------------#
#                      -- SGI IRIX64 MIPSPRO FORTRAN COMPILER --                 #
#--------------------------------------------------------------------------------#

# -- Precision promotion flags. All descriptions from the
# -- SGI MIPSpro 7 Fortran 90 compiler manpage.
# --
# -- The "-i8" specifies the length of default integer constants, default
# -- integer variables, and logical quantities as 64-bit (8-byte) objects.
# --
# -- The "-r8" specifies the default kind specification for real values and
# -- uses REAL(KIND=8) and COMPLEX(KIND=8) for real and complex variables,
# -- respectively.

# -- Compile and link common flags
#IRIX64_FC_AND_FL_COMMON_FLAGS = -n32
IRIX64_FC_AND_FL_COMMON_FLAGS = -mips4 -r10000 -O3 -64

# -- Single and double precision compile common flags
IRIX64_FC_COMMON_FLAGS = -c \
                         -static \
                         -bytereclen \
                         -TENV:X=0

# -- Single precision compile flags
IRIX64_FC_SGL_FLAGS = ${IRIX64_FC_COMMON_FLAGS} \
                      ${IRIX64_FC_AND_FL_COMMON_FLAGS}

# -- Double precision compile flags
IRIX64_FC_DBL_FLAGS = ${IRIX64_FC_COMMON_FLAGS} \
                      -r8 -i8 \
                      ${IRIX64_FC_AND_FL_COMMON_FLAGS}

# -- Linker flags
IRIX64_FL_FLAGS = ${IRIX64_FC_AND_FL_COMMON_FLAGS} \
                  -lfastm \
                  -o

# -- Compier and linker definitions
IRIX64_COMPILER = f90
IRIX64_LINKER = f90

# -- Utility file definition
IRIX64_UTIL_OBJ_FILE=util_sgi.o

# -- Endian definition
IRIX64_ENDIAN=big_endian



# ---------------------
# Main flag definitions
# ---------------------

# -- Single precision
IRIX64_SGL_FLAGS = "FC=${IRIX64_COMPILER}" \
	           "FL=${IRIX64_LINKER}" \
	           "FC_FLAGS=${IRIX64_FC_SGL_FLAGS}" \
	           "FL_FLAGS=${IRIX64_FL_FLAGS}" \
                   "UTIL_OBJ_FILE=${IRIX64_UTIL_OBJ_FILE}" \
		   "TAG=sgl" \
                   "ENDIAN=${IRIX64_ENDIAN}"

# -- Single precision
IRIX64_DBL_FLAGS = "FC=${IRIX64_COMPILER}" \
	           "FL=${IRIX64_LINKER}" \
	           "FC_FLAGS=${IRIX64_FC_DBL_FLAGS}" \
	           "FL_FLAGS=${IRIX64_FL_FLAGS}" \
                   "UTIL_OBJ_FILE=${IRIX64_UTIL_OBJ_FILE}"\
		   "TAG=dbl" \
                   "ENDIAN=${IRIX64_ENDIAN}"


#-------------------------------------------------------------------------------#
#                            -- LINUX DEFINITIONS --                            #
#-------------------------------------------------------------------------------#

# -- Utility file definition
Linux_UTIL_OBJ_FILE=util_linux.o

# -- Endian definition
Linux_ENDIAN=big_endian


#-------------------------------------------------------------------------------#
#                      -- PGI FORTRAN COMPILER FOR LINUX --                     #
#-------------------------------------------------------------------------------#

# -- Precision promotion flags. Descriptions from pgf77 manpage
# --
# -- The "-i8" treats INTEGER variables as eight bytes. For
# -- operations  involving integers, use 64-bits for computations.
# --
# -- The "-r8" interprets REAL variables as DOUBLE PRECISION.
# -- Equivalent to using the options -Mr8 and -Mr8intrinsics.

# -- Compile and link common flags
Linux_FC_AND_FL_COMMON_FLAGS_PGI = 

# -- Single and double precision compile common flags
Linux_FC_COMMON_FLAGS_PGI = -c \
                            -fast

# -- Single precision compile flags
Linux_FC_SGL_FLAGS_PGI = ${Linux_FC_COMMON_FLAGS_PGI} \
                         ${Linux_FC_AND_FL_COMMON_FLAGS_PGI}

# -- Double precision compile flags
Linux_FC_DBL_FLAGS_PGI = ${Linux_FC_COMMON_FLAGS_PGI} \
                         -r8 -i8 \
                         ${Linux_FC_AND_FL_COMMON_FLAGS_PGI}

# -- Linker flags
Linux_FL_FLAGS_PGI = ${Linux_FC_AND_FL_COMMON_FLAGS_PGI} \
                     -o

# -- Compier and linker definitions
Linux_COMPILER_PGI = pgf90
Linux_LINKER_PGI = pgf90



# ---------------------
# Main flag definitions
# ---------------------

# -- Single precision
Linux_SGL_FLAGS_PGI = "FC=${Linux_COMPILER_PGI}" \
	              "FL=${Linux_LINKER_PGI}" \
	              "FC_FLAGS=${Linux_FC_SGL_FLAGS_PGI}" \
	              "FL_FLAGS=${Linux_FL_FLAGS_PGI}" \
                      "UTIL_OBJ_FILE=${Linux_UTIL_OBJ_FILE}" \
		      "TAG=sgl" \
                      "ENDIAN=${Linux_ENDIAN}"

# -- Single precision
Linux_DBL_FLAGS_PGI = "FC=${Linux_COMPILER_PGI}" \
	              "FL=${Linux_LINKER_PGI}" \
	              "FC_FLAGS=${Linux_FC_DBL_FLAGS_PGI}" \
	              "FL_FLAGS=${Linux_FL_FLAGS_PGI}" \
                      "UTIL_OBJ_FILE=${Linux_UTIL_OBJ_FILE}"\
		      "TAG=dbl" \
                      "ENDIAN=${Linux_ENDIAN}"



#-------------------------------------------------------------------------------#
#                      -- G95 FORTRAN COMPILER FOR LINUX --                     #
#-------------------------------------------------------------------------------#

# -- Precision promotion flags.
# --
# -- The "-i8" sets kinds of integers without specification to kind=8 (64 bits)
# --
# -- The "-r8" set kinds of reals without kind specifications to double precision

# -- Compile and link common flags
Linux_FC_AND_FL_COMMON_FLAGS_g95 = 

# -- Single and double precision compile common flags
Linux_FC_COMMON_FLAGS_g95 = -c \
                            -ffixed-form \
                            -O3

# -- Single precision compile flags
Linux_FC_SGL_FLAGS_g95 = ${Linux_FC_COMMON_FLAGS_g95} \
                         ${Linux_FC_AND_FL_COMMON_FLAGS_g95}

# -- Double precision compile flags
Linux_FC_DBL_FLAGS_g95 = ${Linux_FC_COMMON_FLAGS_g95} \
                         -r8 -i8 \
                         ${Linux_FC_AND_FL_COMMON_FLAGS_g95}

# -- Linker flags
Linux_FL_FLAGS_g95 = ${Linux_FC_AND_FL_COMMON_FLAGS_g95} \
                     -o

# -- Compier and linker definitions
Linux_COMPILER_g95 = g95
Linux_LINKER_g95 = g95



# ---------------------
# Main flag definitions
# ---------------------

# -- Single precision
Linux_SGL_FLAGS_g95 = "FC=${Linux_COMPILER_g95}" \
	              "FL=${Linux_LINKER_g95}" \
	              "FC_FLAGS=${Linux_FC_SGL_FLAGS_g95}" \
	              "FL_FLAGS=${Linux_FL_FLAGS_g95}" \
                      "UTIL_OBJ_FILE=${Linux_UTIL_OBJ_FILE}" \
		      "TAG=sgl" \
                      "ENDIAN=${Linux_ENDIAN}"

# -- Single precision
Linux_DBL_FLAGS_g95 = "FC=${Linux_COMPILER_g95}" \
	              "FL=${Linux_LINKER_g95}" \
	              "FC_FLAGS=${Linux_FC_DBL_FLAGS_g95}" \
	              "FL_FLAGS=${Linux_FL_FLAGS_g95}" \
                      "UTIL_OBJ_FILE=${Linux_UTIL_OBJ_FILE}"\
		      "TAG=dbl" \
                      "ENDIAN=${Linux_ENDIAN}"



#-------------------------------------------------------------------------------#
#                   -- GFORTRAN FORTRAN COMPILER FOR LINUX --                   #
#-------------------------------------------------------------------------------#

# -- Precision promotion flags.
# --
# -- The "-fdefault-integer-8" sets kinds of integers without specification to kind=8 (64 bits)
# --
# -- The "-fdefault-real-8" set kinds of reals without kind specifications to double precision

# -- Compile and link common flags
Linux_FC_AND_FL_COMMON_FLAGS_gfortran = 

# -- Single and double precision compile common flags
Linux_FC_COMMON_FLAGS_gfortran = -c \
                                 -ffixed-form \
                                 -O3

# -- Single precision compile flags
Linux_FC_SGL_FLAGS_gfortran = ${Linux_FC_COMMON_FLAGS_gfortran} \
                              ${Linux_FC_AND_FL_COMMON_FLAGS_gfortran}

# -- Double precision compile flags
Linux_FC_DBL_FLAGS_gfortran = ${Linux_FC_COMMON_FLAGS_gfortran} \
                              -fdefault-real-8 -fdefault-integer-8 \
                               ${Linux_FC_AND_FL_COMMON_FLAGS_gfortran}

# -- Linker flags
Linux_FL_FLAGS_gfortran = ${Linux_FC_AND_FL_COMMON_FLAGS_gfortran} \
                          -o

# -- Compier and linker definitions
Linux_COMPILER_gfortran = gfortran
Linux_LINKER_gfortran = gfortran



# ---------------------
# Main flag definitions
# ---------------------

# -- Single precision
Linux_SGL_FLAGS_gfortran = "FC=${Linux_COMPILER_gfortran}" \
	                   "FL=${Linux_LINKER_gfortran}" \
	                   "FC_FLAGS=${Linux_FC_SGL_FLAGS_gfortran}" \
	                   "FL_FLAGS=${Linux_FL_FLAGS_gfortran}" \
                           "UTIL_OBJ_FILE=${Linux_UTIL_OBJ_FILE}" \
		           "TAG=sgl" \
                           "ENDIAN=${Linux_ENDIAN}"

# -- Single precision
Linux_DBL_FLAGS_gfortran = "FC=${Linux_COMPILER_gfortran}" \
	                   "FL=${Linux_LINKER_gfortran}" \
	                   "FC_FLAGS=${Linux_FC_DBL_FLAGS_gfortran}" \
	                   "FL_FLAGS=${Linux_FL_FLAGS_gfortran}" \
                           "UTIL_OBJ_FILE=${Linux_UTIL_OBJ_FILE}"\
		           "TAG=dbl" \
                           "ENDIAN=${Linux_ENDIAN}"



#-------------------------------------------------------------------------------#
#                      -- Define the default Linux flags --                     #
#-------------------------------------------------------------------------------#

#Linux_SGL_FLAGS = $(Linux_SGL_FLAGS_PGI)
#Linux_DBL_FLAGS = $(Linux_DBL_FLAGS_PGI)
#Linux_SGL_FLAGS = $(Linux_SGL_FLAGS_g95)
#Linux_DBL_FLAGS = $(Linux_DBL_FLAGS_g95)
Linux_SGL_FLAGS = $(Linux_SGL_FLAGS_gfortran)
Linux_DBL_FLAGS = $(Linux_DBL_FLAGS_gfortran)



#-------------------------------------------------------------------------------
#                          -- MODIFICATION HISTORY --
#-------------------------------------------------------------------------------
#
# $Id: make.macros,v 1.7 2005/09/13 14:08:02 paulv Exp $
#
# $Date: 2005/09/13 14:08:02 $
#
# $Revision: 1.7 $
#
# $Name:  $
#
# $State: Exp $
#
# $Log: make.macros,v $
# Revision 1.7  2005/09/13 14:08:02  paulv
# - Added entries for Linux g95 compiler.
#
# Revision 1.6  2005/03/31 19:11:42  paulv
# - Changed PGI compiler from pgf77 to pgf90.
#
# Revision 1.5  2003/07/15 19:07:44  paulv
# - New version to define single and double precision flags.
#
# Revision 1.4  2002/10/17 17:24:19  paulv
# - Added compiler flags for AIX double precision compilation.
#
# Revision 1.3  2002/05/07 20:11:17  paulv
# - The default is to use the double precision promotion compiler flags
#   (for both integers and reals).
#
# Revision 1.2  2002/03/15 21:17:14  paulv
# - Updated specifically for LBLRTM
#
# Revision 1.1  2002/03/14 20:34:37  paulv
# - New make include files
#
#
#
