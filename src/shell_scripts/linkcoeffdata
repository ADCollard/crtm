#!/bin/sh

usage()
{
  echo
  echo "Usage: linkcoeffdata -l|b sensorid [sensorid2 | sensorid3 | ... | sensoridN]"
  echo
  echo "  -l   Link little-endian data files"
  echo
  echo "  -b   Link big-endian output files"
  echo
  echo "  sensorid [sensorid2 | sensorid3 | ... | sensoridN]"
  echo "       List of the sensorid(s) for which a symlink is required."
  echo "       Examples are: amsua_n16"
  echo "                     ssmis_f16"
  echo "                     hirs3_n18"
  echo
}

# Script name for error messages
SCRIPT_NAME=$(basename $0)
SUCCESS=0
FAILURE=1

# Define defaults
ENDIAN_FILTER="NONE"
LITTLE_ENDIAN_FILTER="Little_Endian"
BIG_ENDIAN_FILTER="Big_Endian"

# Parse the command line options
while getopts lbh OPTVAL; do
  # Exit if option argument looks like another option
  case ${OPTARG} in
    -*) break;;
  esac
  # Parse the valid options
  case ${OPTVAL} in
    l) if [ "${ENDIAN_FILTER}" = "${BIG_ENDIAN_FILTER}" ]; then
         echo "${SCRIPT_NAME}: Cannot specify -l with -b option"
         exit ${FAILURE}
       fi  
       ENDIAN_FILTER=${LITTLE_ENDIAN_FILTER};;
    b) if [ "${ENDIAN_FILTER}" = "${LITTLE_ENDIAN_FILTER}" ]; then
         echo "${SCRIPT_NAME}: Cannot specify -b with -l option"
         exit ${FAILURE}
       fi  
       ENDIAN_FILTER=${BIG_ENDIAN_FILTER};;
    h)  usage
        exit ${SUCCESS};;
    :|\?) OPTVAL=${OPTARG}
          break;;
  esac
done
# Remove the options processed
shift $(expr ${OPTIND} - 1)
# Output invalidities based on OPTVAL
case ${OPTVAL} in
  # If OPTVAL contains nothing, then all options
  # have been successfully parsed and all that
  # remains are the arguments
  \?) if [ $# -lt 2 ]; then
        echo "${SCRIPT_NAME}: Missing 'sensorid' argument(s)"
        usage
        exit ${FAILURE}
      fi;;
  # Invalid option
  ?) echo "${SCRIPT_NAME}: Invalid option '-${OPTARG}'"
     usage
     exit ${FAILURE};;
esac

# Assign command line arguments
SENSORID_LIST=$*

# Link the non-sensor specific data files
COEFFDATA_LIST="EmisCoeff.bin AerosolCoeff.bin CloudCoeff.bin"
linkfiles -d ${ENDIAN_FILTER} ${CRTM_FIXFILE_ROOT} ${COEFFDATA_LIST}

# Link in the sensor specific data files
COEFFTYPE_LIST="SpcCoeff TauCoeff"
for COEFFTYPE in ${COEFFTYPE_LIST}; do
  for SENSORID in ${SENSORID_LIST}; do
    linkfiles -d ${ENDIAN_FILTER} ${CRTM_FIXFILE_ROOT}/${COEFFTYPE} ${SENSORID}.${COEFFTYPE}.bin
  done
done


